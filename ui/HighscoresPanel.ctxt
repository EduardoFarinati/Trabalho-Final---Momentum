#BlueJ class context
comment0.params=mainFrame
comment0.target=HighscoresPanel(MainFrame)
comment0.text=\r\n\ Construtor\ de\ HighscoresPanel\r\n
comment1.params=e
comment1.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment2.params=
comment2.target=void\ leHighscores()
comment2.text=\r\n\ leHighscores\ -\ abre\ ou\ cria\ o\ arquivo\ de\ highscores\ e\ salva\ na\ string\r\n
comment3.params=score\ level
comment3.target=void\ testaScore(double,\ int)
comment3.text=\r\n\ testaScore\ -\ testa\ o\ novo\ score\ e\ salva\ se\ for\ maior\r\n
comment4.params=pos\ arrPos\ level\ score
comment4.target=void\ newHighscoreDialog(int,\ int,\ int,\ double)
comment4.text=\r\n\ newHighscoreDialog\ -\ se\ um\ novo\ highscore\ for\ encontrado,\ esse\ metodo\ deve\ ser\ executado\ para\ exibir\ um\ JDialog\ para\ o\ usuario\r\n
comment5.params=e
comment5.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment6.params=pos\ arrPos\ level\ score\ name
comment6.target=void\ addHighscore(int,\ int,\ int,\ double,\ java.lang.String)
comment6.text=\r\n\ addHighscore\ -\ se\ um\ novo\ highscore\ for\ encontrado,\ esse\ metodo\ deve\ ser\ executado\ para\ salvar\ o\ novo\ highscore\r\n
comment7.params=
comment7.target=void\ escreveHighscores()
comment7.text=\r\n\ escreveHighscore\ -\ se\ um\ novo\ highscore\ for\ encontrado,\ esse\ metodo\ escreve\ no\ arquivo\ o\ novo\ highscore\r\n
comment8.params=
comment8.target=boolean\ isBlinking()
comment9.params=run
comment9.target=void\ setBlinking(boolean)
numComments=10
